IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_CoreBlockSectionTabDelete]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[VJ_Core_BlockSection]'))
BEGIN
delete from {databaseOwner}[VJ_Core_BlockSection] where TabID not in(select TabID from {databaseOwner}[{objectQualifier}Tabs])
ALTER TABLE {databaseOwner}[VJ_Core_BlockSection] ADD CONSTRAINT FK_CoreBlockSectionTabDelete FOREIGN KEY (TabID) REFERENCES {databaseOwner}[{objectQualifier}Tabs](TabID) ON DELETE CASCADE
END
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_CoreBlockSectionPermissionEntityID]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[VJ_Core_BlockSectionPermission]'))
BEGIN
delete from {databaseOwner}[VJ_Core_BlockSectionPermission] where EntityID not in(select EntityID from {databaseOwner}[VJ_Core_BlockSection])
ALTER TABLE {databaseOwner}[VJ_Core_BlockSectionPermission] ADD CONSTRAINT FK_CoreBlockSectionPermissionEntityID FOREIGN KEY (EntityID) REFERENCES {databaseOwner}[VJ_Core_BlockSection](EntityID) ON DELETE CASCADE
END
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_CoreCustomBlockPortalDelete]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[VJ_Core_CustomBlock]'))
BEGIN
delete from {databaseOwner}[VJ_Core_CustomBlock] where PortalID not in(select portalid from {databaseOwner}[{objectQualifier}Portals])
ALTER TABLE {databaseOwner}[VJ_Core_CustomBlock] ADD CONSTRAINT FK_CoreCustomBlockPortalDelete FOREIGN KEY (PortalID) REFERENCES {databaseOwner}[{objectQualifier}Portals](PortalID) ON DELETE CASCADE
END
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_CoreGlobalBlockPortalDelete]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[VJ_Core_GlobalBlock]'))
BEGIN
delete from {databaseOwner}[VJ_Core_GlobalBlock] where PortalID not in(select portalid from {databaseOwner}[{objectQualifier}Portals])
ALTER TABLE {databaseOwner}[VJ_Core_GlobalBlock] ADD CONSTRAINT FK_CoreGlobalBlockPortalDelete FOREIGN KEY (PortalID) REFERENCES {databaseOwner}[{objectQualifier}Portals](PortalID) ON DELETE CASCADE
END
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_CoreLocalizationPortalDelete]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[VJ_Core_Localization]'))
BEGIN
delete from {databaseOwner}[VJ_Core_Localization]
ALTER TABLE {databaseOwner}[VJ_Core_Localization] ADD PortalID int NOT NULL
ALTER TABLE {databaseOwner}[VJ_Core_Localization] ADD CONSTRAINT FK_CoreLocalizationPortalDelete FOREIGN KEY (PortalID) REFERENCES {databaseOwner}[{objectQualifier}Portals](PortalID) ON DELETE CASCADE
END
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_CorePagesPortalDelete]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[VJ_Core_Pages]'))
BEGIN
delete from {databaseOwner}[VJ_Core_Pages] where PortalID not in(select portalid from {databaseOwner}[{objectQualifier}Portals])
ALTER TABLE {databaseOwner}[VJ_Core_Pages] ADD CONSTRAINT FK_CorePagesPortalDelete FOREIGN KEY (PortalID) REFERENCES {databaseOwner}[{objectQualifier}Portals](PortalID) ON DELETE CASCADE
END
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_CoreSettingPortalDelete]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[VJ_Core_Setting]'))
BEGIN
delete from {databaseOwner}[VJ_Core_Setting] where PortalID not in(select portalid from {databaseOwner}[{objectQualifier}Portals])
ALTER TABLE {databaseOwner}[VJ_Core_Setting] ADD CONSTRAINT FK_CoreSettingPortalDelete FOREIGN KEY (PortalID) REFERENCES {databaseOwner}[{objectQualifier}Portals](PortalID) ON DELETE CASCADE
END
GO

UPDATE {databaseOwner}{objectQualifier}Tabs SET SiteMapPriority=0.5 WHERE SiteMapPriority=-1